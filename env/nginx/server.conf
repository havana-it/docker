# vim: filetype=nginx
server {
    # Increase buffers size
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    listen 80;
    server_name localhost.dev www.localhost.dev;
    root /server/web;


    location / {
        # try to serve file directly, fallback to app_dev.php
        try_files $uri /app_dev.php$is_args$args;
    }

    location ~ ^/(app_dev|config)\.php(/|$) {
        # Increase buffers size to avoid bad gateway error
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;

        # If you change the service name for PHP-FPM in your
        # docker-compose file, don't forget to update the URL
        # accordingly
        fastcgi_pass fpm:9000;

        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }

    # Send error & access debug messages to STDOUT, 
    # so that it appears in docker-compose logs
    error_log /proc/self/fd/2;
    access_log /proc/self/fd/2;
}
